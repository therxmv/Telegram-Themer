plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.parcelize'
    id 'kotlin-kapt'
}

android {
    namespace appConfig.applicationId
    compileSdk appConfig.compileSdkVersion

    defaultConfig {
        applicationId appConfig.applicationId
        minSdk appConfig.minSdkVersion
        targetSdk appConfig.targetSdkVersion
        versionCode appConfig.versionCode
        versionName appConfig.versionName

        resConfigs 'uk_UA'
        vectorDrawables.useSupportLibrary = true
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    implementation project(":preview")

    implementation appDependencies.colorPicker
    implementation appDependencies.mmkv
    implementation appDependencies.gson

    implementation appDependencies.hilt
    implementation appDependencies.dagger
    implementation appDependencies.daggerAndroid
    implementation appDependencies.daggerAndroidSupport
    kapt appDependencies.daggerCompiler
    kapt appDependencies.daggerAndroidProcessor

    implementation appDependencies.navigationKtx
    implementation appDependencies.navigationUiKtx
    implementation appDependencies.fragmentKtx
    implementation appDependencies.coreKtx
    implementation appDependencies.appCompat
    implementation appDependencies.material
    implementation appDependencies.constraintLayout
}

tasks.register("writeVersion") {
    var versionFile = layout.buildDirectory.file("version.txt").get().asFile
    doLast {
        println("execute write version ${versionFile.absolutePath}")
        versionFile.parentFile?.mkdirs()
        versionFile.write(appConfig.versionName)
    }
}